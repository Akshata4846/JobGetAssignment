<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="LAPTOP-QTT2AQ1K" ignored="0" name="Logout Test" tests="2" failures="0" timestamp="2022-01-24T15:13:19 IST" time="199.037" errors="0">
  <testcase name="@BeforeMethod setUp" time="182.214" classname="com.jobget.testcases.LogOutPageTest">
    <failure type="java.lang.IllegalArgumentException" message="Can not set static io.appium.java_client.MobileElement field com.jobget.pages.LoginPage.loginBtn to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4">
      <![CDATA[java.lang.IllegalArgumentException: Can not set static io.appium.java_client.MobileElement field com.jobget.pages.LoginPage.loginBtn to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4
at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(Unknown Source)
at sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(Unknown Source)
at sun.reflect.UnsafeStaticObjectFieldAccessorImpl.set(Unknown Source)
at java.lang.reflect.Field.set(Unknown Source)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:117)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at com.jobget.pages.LoginPage.<init>(LoginPage.java:134)
at com.jobget.testcases.LogOutPageTest.setUp(LogOutPageTest.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="-1.643017393306E9" classname="com.jobget.testcases.LogOutPageTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@BeforeMethod setUp" time="-1.643017394027E9" classname="com.jobget.testcases.LogOutPageTest">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase name="@AfterMethod tearDown" time="-1.643017394036E9" classname="com.jobget.testcases.LogOutPageTest">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase name="@AfterTest writeReport" time="-1.64301739404E9" classname="com.jobget.testcases.TestBase">
    <skipped/>
  </testcase> <!-- @AfterTest writeReport -->
  <testcase name="testLogoutConfirmationTrue" time="0.0" classname="com.jobget.testcases.LogOutPageTest">
    <skipped/>
  </testcase> <!-- testLogoutConfirmationTrue -->
  <testcase name="testLogoutConfirmationFalse" time="0.0" classname="com.jobget.testcases.LogOutPageTest">
    <skipped/>
  </testcase> <!-- testLogoutConfirmationFalse -->
</testsuite> <!-- Logout Test -->
